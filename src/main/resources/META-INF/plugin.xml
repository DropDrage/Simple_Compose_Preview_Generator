<!--
  ~ SPDX-License-Identifier: MPL-2.0
  ~ This Source Code Form is subject to the terms of the Mozilla Public
  ~ License, v. 2.0. If a copy of the MPL was not distributed with this
  ~ file, You can obtain one at https://mozilla.org/MPL/2.0/.
  -->

<idea-plugin>
    <id>com.dropdrage.SimpleComposePreviewGenerator</id>

    <name>Simple Compose Preview Generator</name>

    <vendor url="https://github.com/DropDrage">DropDrage</vendor>

    <resource-bundle>messages.SimpleComposePreviewGeneratorBundle</resource-bundle>

    <description><![CDATA[
        Generates a Jetpack Compose Preview with arguments and wraps (if enabled) into an auto-detected theme
        quickly and without the Internet.
        <p>
            Can be run for:
        </p>
        <ul>
            <li>A single function using
                <code>Alt</code>+<code>Enter</code> (Windows/Linux) / <code>⌥⏎</code> (macOS) ->
                Generate Compose Preview</li>
            <li>All the functions in file without preview using
                <code>Alt</code>+<code>Insert</code> (Windows/Linux) / <code>⌘N</code> (macOS) ->
                Generate All Remaining Compose Previews
            </li>
        </ul>

        <p>
            Generated preview function is private and ends with configurable suffix ("Preview" by default).
            If "Add theme" option is enabled the composable function call will be wrapped into first accessible theme.
        </p>
        <p>
            Generation can be configured:
        </p>
        <ul>
            <li>General: Preview function name suffix</li>
            <li>Code Style: First annotation, Preview function body type, Preview function location, Trailing comma,
                Force single blank line before Preview
            </li>
            <li>Arguments Generation: Generate function arguments with default values, Skip ViewModel, Generate Modifier,
                Assign null values for nullable arguments, Add theme, Use empty collection builders
            </li>
        </ul>
        <p>
            After generation all the arguments can be edited with IDE smart autocompletion.
            Arguments of some types are provided with default simplifying elements
            (e.g. <code>String</code> argument is generated with <code>""</code> value).
        </p>
        <p>
            Argument types that generated with default simplifying elements:
        </p>
        <ul>
            <li>Nullable types (disabled by default)</li>
            <li>Enums</li>
            <li>Lambdas</li>
            <li><code>Char</code></li>
            <li><code>String</code>, <code>CharSequence</code></li>
            <li><code>Unit</code>, <code>Nothing</code></li>
            <li><code>Modifier</code></li>
            <li>Arrays: <code>Array</code>, <code>IntArray</code>, <code>UIntArray</code>,
                <code>FloatArray</code> and etc.
            </li>
            <li>Iterables: <code>Iterable</code>, <code>Collection</code>, <code>List</code>,
                <code>MutableList</code>, <code>AbstractList</code>, <code>ArrayList</code></li>
            <li>Sets: <code>Set</code>, <code>MutableSet</code>, <code>HashSet</code>, <code>LinkedHashSet</code>,
                <code>SortedSet</code>, <code>TreeSet</code></li>
            <li>Maps: <code>Map</code>, <code>MutableMap</code>, <code>HashMap</code>, <code>LinkedHashMap</code>,
                <code>SortedMap</code></li>
            <li><code>Sequence</code></li>
            <li>Kotlin Immutable Collections: <code>ImmutableCollection</code>, <code>ImmutableList</code>,
                <code>ImmutableSet</code>, <code>ImmutableMap</code> and same for <code>Persistent</code> ones
            </li>
        </ul>
 ]]></description>

    <change-notes><![CDATA[
        <h3>0.34</h3>
		<ul>
			<li>Preview generation</li>
			<li>Default simplifying elements for the most popular types</li>
			<li>Inline edit</li>
			<li>Preview of generated preview</li>
		</ul>
 ]]></change-notes>

    <depends>com.intellij.modules.platform</depends>
    <depends>org.jetbrains.kotlin</depends>

    <extensions defaultExtensionNs="com.intellij">
        <projectConfigurable
                parentId="other"
                instance="com.dropdrage.simpleComposePreviewGenerator.config.MainConfigurable"
                id="SimpleComposePreviewGeneratorConfigurable"
                key="settings.title"
                nonDefaultProject="true"/>
        <applicationService serviceImplementation="com.dropdrage.simpleComposePreviewGenerator.config.ConfigService"/>

        <intentionAction>
            <language>kotlin</language>
            <className>com.dropdrage.simpleComposePreviewGenerator.intention.GenerateComposePreview</className>
            <!--suppress PluginXmlCapitalization -->
            <categoryKey>intention.generatePreview.category</categoryKey>
        </intentionAction>

        <fileBasedIndex implementation="com.dropdrage.simpleComposePreviewGenerator.index.ComposeThemeIndex"/>
    </extensions>
    <actions>
        <action id="generateAllComposePreviews"
                class="com.dropdrage.simpleComposePreviewGenerator.action.GenerateAllComposePreview">
            <add-to-group group-id="GenerateGroup" anchor="first"/>
        </action>
    </actions>
    <extensions defaultExtensionNs="org.jetbrains.kotlin">
        <supportsKotlinPluginMode supportsK2="false"/>
    </extensions>
</idea-plugin>
